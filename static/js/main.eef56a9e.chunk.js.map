{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","large","top","spacing","width","height","classes","className","style","id","margin","IconButton","href","fontSize","onClick","window","scrollTo","left","behavior","display","alignItems","src","alt","justifyContent","role","aria-label","Avatar","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eef56a9e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GmailIcon from \"@material-ui/icons/Mail\";\nimport GithubIcon from \"@material-ui/icons/GitHub\";\nimport ArrowDownwardRoundedIcon from \"@material-ui/icons/ArrowDownwardRounded\";\n// import ArrowUpwardRoundedIcon from '@material-ui/icons/ArrowUpwardRounded';\n\nconst useStyles = makeStyles((theme) => ({\n  large: {\n    top: theme.spacing(4),\n    width: theme.spacing(15),\n    height: theme.spacing(15),\n  },\n}));\n\nexport default () => {\n  const classes = useStyles();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 style={{ \"text-align\": \"start\" }}>Hi! My name is Ruby Kozel</h1>\n        <p id=\"header-description\">\n          I'm 26 years old and live in Israel.\n          <br />I have a B.Sc at Software Engineering and am working as a\n          Full-Stack Cloud Developer @ SAP Cloud Portal Team for the past 2\n          years.\n        </p>\n        <div style={{ margin: \"20px 10px 0 10px\" }}>\n          <IconButton href=\"https://github.com/RubyKozel\">\n            <GithubIcon style={{ fontSize: 50 }} />\n          </IconButton>\n        </div>\n        <div\n          onClick={() =>\n            window.scrollTo({ top: 750, left: 0, behavior: \"smooth\" })\n          }\n        >\n          <IconButton style={{ top: \"20vh\" }}>\n            <ArrowDownwardRoundedIcon style={{ fontSize: 50 }} />\n          </IconButton>\n        </div>\n      </header>\n      <div className=\"content\">\n        <div id=\"my-description\">\n          <p>\n            As a Full-Stack developer I have the opertunity to write secure\n            cloud applications and programs that reaches thousands of people.\n          </p>\n          <div>\n            <p>\n              My expertise and favorite would be writing Node.js applications\n              and microservices with various frameworks such as Express for\n              JavaScript and NestJS for Typescript.\n            </p>\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <img\n                src=\"https://cdn.pixabay.com/photo/2015/04/23/17/41/node-js-736399_960_720.png\"\n                width=\"15%\"\n                height=\"15%\"\n                alt=\"nodejs-logo\"\n              />\n              <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/TypeScript_Logo_%28Blue%29.svg/1200px-TypeScript_Logo_%28Blue%29.svg.png\"\n                width=\"15%\"\n                height=\"15%\"\n                alt=\"ts-logo\"\n              />\n              <img\n                src=\"https://transang.me/content/images/2019/11/ExpressJS.png\"\n                width=\"15%\"\n                height=\"15%\"\n                alt=\"express-logo\"\n              />\n            </div>\n          </div>\n          <p>\n            In the front-end side I focuse on professioning React as my main JS\n            framework, but I'm also learning other frameworks such as Svelt and\n            Vue.\n          </p>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <img\n              src=\"https://dwglogo.com/wp-content/uploads/2017/09/1460px-React_logo.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"nodejs-logo\"\n            />\n            <img\n              src=\"https://www.dotcom-monitor.com/blog/wp-content/uploads/sites/3/2020/05/Vue-logo-1.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"ts-logo\"\n            />\n            <img\n              src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ltuBUsdI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/rdlauer/articles/master/nativescript/svelte-intro/svelte-logo.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"express-logo\"\n            />\n          </div>\n          <p>\n            For databases I mainly use non-relational databases such as MongoDB\n            or Firebase Firestore, but I'm also familiar with PostgreSQL and ORM\n            in JS and TS.\n          </p>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <img\n              src=\"https://www.unitask-inc.com/wp-content/uploads/2018/02/MongoDB-Logo.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"nodejs-logo\"\n            />\n            <img\n              src=\"https://miro.medium.com/max/2598/1*a2Da_CQHUsSKTCTRI2tYhQ.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"ts-logo\"\n            />\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Postgresql_elephant.svg/993px-Postgresql_elephant.svg.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"express-logo\"\n            />\n          </div>\n          <br />\n          <p>\n            I also have experience in using the object stores Node.js libraries\n            of AWS (Amazon), GCP (Google), Azure (Microsoft) and OSS (Alibaba),\n            and Redis database.\n          </p>\n          <br />\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <img\n              src=\"https://futurumresearch.com/wp-content/uploads/2020/01/aws-logo.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"nodejs-logo\"\n            />\n            <img\n              src=\"https://download.logo.wine/logo/Google_Cloud_Platform/Google_Cloud_Platform-Logo.wine.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"ts-logo\"\n            />\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Microsoft_Azure_Logo.svg/500px-Microsoft_Azure_Logo.svg.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"express-logo\"\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-evenly\",\n            }}\n          >\n            <img\n              src=\"https://d39kqat1wpn1o5.cloudfront.net/app/uploads/2019/04/alibaba-cloud-poweredby.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"nodejs-logo\"\n            />\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/en/thumb/6/6b/Redis_Logo.svg/1200px-Redis_Logo.svg.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"ts-logo\"\n            />\n          </div>\n          <br />\n          <p>I'm also familiar with:</p>\n          <ul style={{ width: \"70%\", margin: \"0 auto\" }}>\n            <li>\n              writing native mobile applications using React Native and have\n              developed a native application with is as my final project.\n            </li>\n            <li>\n              Java development, including the Spring framework for REST APIs\n            </li>\n            <li>\n              Python development, including knowledge in Flask, Connexion and\n              PyTorch,\n            </li>\n          </ul>\n          <br />\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <img\n              src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LS4X9NFz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pagepro.co/blog/wp-content/uploads/2020/03/react-native-logo-884x1024.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"nodejs-logo\"\n            />\n            <img\n              src=\"https://bgasparotto.com/wp-content/uploads/2017/12/spring-logo.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"ts-logo\"\n            />\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Python-logo-notext.svg/1024px-Python-logo-notext.svg.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"express-logo\"\n            />\n          </div>\n          <br />\n          <p>\n            Coding is a hobby for me and I enjoy building and creating new\n            application and programs to pass the time and solve my own\n            individual problems, and hopefully - others too.\n          </p>\n          <p>\n            I always track the latest and greatest feature in cloud and web\n            development and try to stay updated with all the hot topics. <span role=\"img\" aria-label=\"emoji1\">🔭</span>\n          </p>\n          <p>\n            I'm doing my best to donate to the open-source community as much as\n            I can and am looking to collaborate at some interesting full-stack\n            applications <span role=\"img\" aria-label=\"emoji2\">👯</span>\n          </p>\n          <br />\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-evenly\",\n            }}\n          >\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Npm-logo.svg/1280px-Npm-logo.svg.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"nodejs-logo\"\n            />\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Octicons-logo-github.svg/1200px-Octicons-logo-github.svg.png\"\n              width=\"15%\"\n              height=\"15%\"\n              alt=\"ts-logo\"\n            />\n          </div>\n          <div className=\"center\">\n            <p style={{ fontSize: 30 }}>And this is me:</p>\n            <Avatar\n              src=\"https://media-exp1.licdn.com/dms/image/C5603AQHTsCFFyQMcmA/profile-displayphoto-shrink_400_400/0?e=1602720000&v=beta&t=bMe1gKdkdnCfic48PH9TJ2txUNCV53LKfdh_jWEMlcY\"\n              className={classes.large}\n            />\n          </div>\n        </div>\n      </div>\n      <footer className=\"footer\">\n        <p>Contact me at: </p>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <div style={{ margin: \"20px\" }}>\n            <IconButton href=\"https://www.facebook.com/ruby.kozel\">\n              <FacebookIcon style={{ fontSize: 45 }} />\n            </IconButton>\n          </div>\n          <div style={{ margin: \"20px\" }}>\n            <Avatar>\n              <IconButton href=\"https://www.linkedin.com/in/rubykozel/\">\n                <LinkedInIcon fontSize=\"large\" />\n              </IconButton>\n            </Avatar>\n          </div>\n          <div style={{ margin: \"20px\" }}>\n            <Avatar>\n              <IconButton href=\"mailto:rubykozel@gmail.com\">\n                <GmailIcon />\n              </IconButton>\n            </Avatar>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}